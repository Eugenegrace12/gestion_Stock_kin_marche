 
package produit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import kinmarcher.login.dashboard.dashboad;

public class produit extends javax.swing.JFrame {

    public produit() {
        
        
        initComponents();
        initComboBox();
        updateTable(); // Chargez les données de la table dès le démarrage de l'application
        supprimer.setBackground(new java.awt.Color(204, 0, 51));
supprimer.setText("Supprimer");
supprimer.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        supprimerActionPerformed(evt);
    }
});
jPanel3.add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 140, 50));

        

    }

    private Connection getConnection() throws SQLException {
        String url = "jdbc:sqlserver://DESKTOP-INKBQQ3\\SA:1433;databaseName=examen;user=tp;password=1234;";
        return DriverManager.getConnection(url);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCTextField1 = new app.bolivia.swing.JCTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new rojeru_san.complementos.RSTableMetro();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        id = new app.bolivia.swing.JCTextField();
        nomproduit = new app.bolivia.swing.JCTextField();
        jLabel4 = new javax.swing.JLabel();
        type = new app.bolivia.swing.JCTextField();
        jLabel5 = new javax.swing.JLabel();
        fournissuer = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        modifier = new rojerusan.RSMaterialButtonCircle();
        supprimer = new rojerusan.RSMaterialButtonCircle();
        enregistrer = new rojerusan.RSMaterialButtonCircle();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 0, 0)));
        jCTextField1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jCTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 230, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 0));
        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\customer_3126647.png")); // NOI18N
        jLabel9.setText("  Gestion Produit ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\cross.png")); // NOI18N
        jLabel3.setText(" ");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 40, 40));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nom produit", "Type produit", "fournisseur"
            }
        ));
        table1.setColorBackgoundHead(new java.awt.Color(0, 153, 204));
        table1.setColorBordeFilas(new java.awt.Color(102, 0, 51));
        table1.setColorBordeHead(new java.awt.Color(255, 255, 255));
        table1.setColorSelBackgound(new java.awt.Color(255, 0, 51));
        jScrollPane1.setViewportView(table1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 590, 480));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 590, 580));

        jPanel3.setBackground(new java.awt.Color(102, 153, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\agreement (1).png")); // NOI18N
        jLabel2.setText("Fournisseur");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 160, 30));

        id.setBackground(new java.awt.Color(102, 153, 255));
        id.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel3.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 220, 20));

        nomproduit.setBackground(new java.awt.Color(102, 153, 255));
        nomproduit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel3.add(nomproduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 220, 30));

        jLabel4.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\id-card.png")); // NOI18N
        jLabel4.setText("Nom produit");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 130, 30));

        type.setBackground(new java.awt.Color(102, 153, 255));
        type.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel3.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 220, 20));

        jLabel5.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\signature.png")); // NOI18N
        jLabel5.setText("type produit");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 120, -1));

        fournissuer.setBackground(new java.awt.Color(102, 153, 255));
        fournissuer.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel3.add(fournissuer, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 220, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Personalisation");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 180, -1));

        jLabel11.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\face-id.png")); // NOI18N
        jLabel11.setText("ID");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 50, -1));

        jLabel12.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\EugenePc\\Downloads\\back (1).png")); // NOI18N
        jLabel12.setText(" ");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 40));

        modifier.setBackground(new java.awt.Color(204, 0, 51));
        modifier.setText("Modifier");
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        jPanel3.add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, 140, 50));

        supprimer.setBackground(new java.awt.Color(204, 0, 51));
        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        jPanel3.add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 140, 50));

        enregistrer.setBackground(new java.awt.Color(204, 0, 51));
        enregistrer.setText("Enregistrer");
        enregistrer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enregistrerMouseClicked(evt);
            }
        });
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerActionPerformed(evt);
            }
        });
        jPanel3.add(enregistrer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 140, 50));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 580));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        dashboad dashe= new dashboad();
        dashe.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseClicked

    private void enregistrerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enregistrerMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_enregistrerMouseClicked

    private void enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerActionPerformed
        try {
        // Récupérer les valeurs des champs
        String idProduit = id.getText();
        String nomProduit = nomproduit.getText();
        String typeProduit = type.getText();
        String nomFournisseur = fournissuer.getSelectedItem().toString();

        // Connexion à la base de données
        Connection connection = getConnection();

        // Insertion des données dans la table produit
        String insertQuery = "INSERT INTO produit (nom_produit, type_produit, fournisseur_id) VALUES (?, ?, ?)";
        PreparedStatement pstmt = connection.prepareStatement(insertQuery);
        pstmt.setString(1, nomProduit);
        pstmt.setString(2, typeProduit);

        // Récupérer l'ID du fournisseur en fonction de son nom
        String fournisseurIdQuery = "SELECT id FROM fournisseur WHERE nom=?";
        PreparedStatement fournisseurIdStmt = connection.prepareStatement(fournisseurIdQuery);
        fournisseurIdStmt.setString(1, nomFournisseur);
        ResultSet rs = fournisseurIdStmt.executeQuery();

        int fournisseurId = 0;
        if (rs.next()) {
            fournisseurId = rs.getInt("id");
        }

        pstmt.setInt(3, fournisseurId);

        int rowsInserted = pstmt.executeUpdate();
        if (rowsInserted > 0) {
            // Succès de l'insertion, afficher un message
            JOptionPane.showMessageDialog(this, "Enregistrement réussi !");
            updateTable(); // Mettre à jour la table après l'enregistrement
        } else {
            JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement !");
        }

        rs.close();
        pstmt.close();
        fournisseurIdStmt.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement : " + e.getMessage());
        // Gérer les erreurs de base de données
    }
    }//GEN-LAST:event_enregistrerActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
       
    int selectedRow = table1.getSelectedRow();

    // Assurez-vous qu'une ligne est sélectionnée
    if (selectedRow >= 0) {
        // Récupérez les données de la ligne sélectionnée
        int idProduit = (int) table1.getValueAt(selectedRow, 0);
        String nomProduit = (String) table1.getValueAt(selectedRow, 1);
        String typeProduit = (String) table1.getValueAt(selectedRow, 2);

        // Récupérez les nouvelles valeurs des champs de votre interface produit
        String nouveauNomProduit = nomproduit.getText();
        String nouveauTypeProduit = type.getText();
        String nomFournisseur = fournissuer.getSelectedItem().toString();

        try {
            Connection conn = getConnection();

            // Requête SQL pour mettre à jour les informations du produit
            String updateQuery = "UPDATE produit SET nom_produit=?, type_produit=?, fournisseur_id=? WHERE id=?";
            PreparedStatement preparedStatement = conn.prepareStatement(updateQuery);
            preparedStatement.setString(1, nouveauNomProduit);
            preparedStatement.setString(2, nouveauTypeProduit);

            // Récupérer l'ID du fournisseur en fonction de son nom
            String fournisseurIdQuery = "SELECT id FROM fournisseur WHERE nom=?";
            PreparedStatement fournisseurIdStmt = conn.prepareStatement(fournisseurIdQuery);
            fournisseurIdStmt.setString(1, nomFournisseur);
            ResultSet rs = fournisseurIdStmt.executeQuery();

            int fournisseurId = 0;
            if (rs.next()) {
                fournisseurId = rs.getInt("id");
            }

            preparedStatement.setInt(3, fournisseurId);
            preparedStatement.setInt(4, idProduit);

            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Produit modifié avec succès !");
                // Réinitialisez les champs après la modification si nécessaire
                nomproduit.setText("");
                type.setText("");
                fournissuer.setSelectedIndex(0);

                // Chargez à nouveau les données des produits après la modification
                updateTable();
            } else {
                JOptionPane.showMessageDialog(null, "La modification a échoué. Assurez-vous de sélectionner un produit.");
            }

            rs.close();
            fournisseurIdStmt.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erreur lors de la modification du produit : " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Veuillez sélectionner un produit à modifier.");
    }
    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        // Récupérez la ligne sélectionnée dans la table
    int selectedRow = table1.getSelectedRow();

    // Assurez-vous qu'une ligne est sélectionnée
    if (selectedRow >= 0) {
        // Récupérez l'ID du produit à supprimer
        int idProduit = (int) table1.getValueAt(selectedRow, 0);

        int confirmation = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer ce produit ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);
        
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                Connection conn = getConnection();

                // Requête SQL pour supprimer un produit en fonction de son ID
                String query = "DELETE FROM produit WHERE id=?";
                PreparedStatement preparedStatement = conn.prepareStatement(query);
                preparedStatement.setInt(1, idProduit);

                int rowsDeleted = preparedStatement.executeUpdate();
                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Produit supprimé avec succès !");
                    // Chargez à nouveau les données des produits après la suppression
                    updateTable();
                } else {
                    JOptionPane.showMessageDialog(null, "La suppression a échoué. Assurez-vous de sélectionner un produit.");
                }

                conn.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur lors de la suppression du produit : " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Veuillez sélectionner un produit à supprimer.");
    }
    }//GEN-LAST:event_supprimerActionPerformed

    private void updateTable() {
    DefaultTableModel model = (DefaultTableModel) table1.getModel();
    model.setRowCount(0); // Efface toutes les lignes actuelles de la table

    try {
        Connection connection = getConnection();
        String query = "SELECT id, nom_produit, type_produit, fournisseur_id FROM produit";
        PreparedStatement pstmt = connection.prepareStatement(query);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            int idProduit = rs.getInt("id");
            String nomProduit = rs.getString("nom_produit");
            String typeProduit = rs.getString("type_produit");
            int fournisseurId = rs.getInt("fournisseur_id");

            // Maintenant, ajoutez ces données à la table1
            model.addRow(new Object[]{idProduit, nomProduit, typeProduit, fournisseurId});
        }

        rs.close();
        pstmt.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        // Gérer les erreurs de base de données
    }
}

    private void initComboBox() {
    // Code pour récupérer les noms de fournisseurs depuis la base de données
    try {
        Connection connection = getConnection();
        String query = "SELECT nom FROM fournisseur";
        PreparedStatement pstmt = connection.prepareStatement(query);
        ResultSet rs = pstmt.executeQuery();
        
        while (rs.next()) {
            String nomFournisseur = rs.getString("nom");
            fournissuer.addItem(nomFournisseur);
        }
        
        rs.close();
        pstmt.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
        // Gérer les erreurs de base de données
    }
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(produit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(produit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(produit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(produit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new produit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonCircle enregistrer;
    private javax.swing.JComboBox<String> fournissuer;
    private app.bolivia.swing.JCTextField id;
    private app.bolivia.swing.JCTextField jCTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSMaterialButtonCircle modifier;
    private app.bolivia.swing.JCTextField nomproduit;
    private rojerusan.RSMaterialButtonCircle supprimer;
    private rojeru_san.complementos.RSTableMetro table1;
    private app.bolivia.swing.JCTextField type;
    // End of variables declaration//GEN-END:variables
}
